@page "/dogs"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using FinalProject_DG_CH_BF.Models
@using FinalProject_DG_CH_BF.Data
@implements IAsyncDisposable
@inject IDbContextFactory<FinalProject_DG_CH_BF.Data.FinalProject_DG_CH_BFContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Available Dogs:</h1>

<p>
    <input type="search" @bind="NameFilter" @bind:event="oninput"/>
</p>



<QuickGrid Class="table" Items="FilteredDogs" Pagination="pagination">
    <TemplateColumn Context="dog">

        <img src=@dog.imageName alt="" width="150" height="150"
             class="d-inline-block align-text-top" />


    </TemplateColumn>

    <PropertyColumn Property="dog => dog.Name" Sortable="true"/>
    <PropertyColumn Property="dog => dog.Id" Sortable="true" />
    <PropertyColumn Property="dog => dog.Color" Sortable="true" />
    <PropertyColumn Property="dog => dog.Breed" Sortable="true" />
    <PropertyColumn Property="dog => dog.Gender" Sortable="true" />
    <PropertyColumn Property="dog => dog.Age" Sortable="true" />
    <PropertyColumn Property="dog => dog.GoodWithKids" Sortable="true" />
    <PropertyColumn Property="dog => dog.GoodWithDogs" Sortable="true" />
    <PropertyColumn Property="dog => dog.GoodWithCats" Sortable="true" />

    

    <TemplateColumn Context="dog">

        <a href="@($"dogs/details?id={dog.Id}")">Details</a> |
        

    </TemplateColumn>
</QuickGrid>
<Paginator State ="pagination"/>

@code {
    private FinalProject_DG_CH_BFContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

   
    private string NameFilter = string.Empty;

    private IQueryable<Dog> FilteredDogs => context.Dog.Where(m => m.Name!.Contains(NameFilter));

    public async ValueTask DisposeAsync() => await context.DisposeAsync();

    private PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
}
